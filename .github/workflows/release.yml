name: Release workflow

on:
  workflow_dispatch:


jobs:
  publish:
    if: github.ref == 'refs/heads/trunk'
    runs-on: ubuntu-latest
    env:
      appName: 'azCogSvc'

    steps:
      - name: Version
        run: echo Releasing version $releaseVersion
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment version variable
        run: echo "RELEASEVERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: ShowOutput of En Var RELEASEVERSION
        run: echo New Version - $RELEASEVERSION

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.402
      # Publish osx-x64
      - name: Publish osx-x64
        run: dotnet publish -r osx-x64 -c Release /p:PublishTrimmed=true /p:PublishSingleFile=true /p:Version=${{env.RELEASEVERSION}}
      - name: Zip osx-x64
        run: (cd ${{env.appName}}/bin/Release/netcoreapp3.1/osx-x64/publish ; zip -r ${{env.appName}}_osx-x64.zip *)
      # Publish win-x64
      - name: Publish win-x64
        run: dotnet publish -r win-x64 -c Release /p:PublishTrimmed=true /p:PublishSingleFile=true  /p:Version=${{env.RELEASEVERSION}}
      - name: Zip win-x64
        run: (cd ${{env.appName}}/bin/Release/netcoreapp3.1/win-x64/publish ; zip -r ${{env.appName}}_win-x64 *)
      # Publish linux-x64
      - name: Publish linux-x64
        run: dotnet publish -r linux-x64 -c Release /p:PublishTrimmed=true /p:PublishSingleFile=true /p:Version=${{env.RELEASEVERSION}}
      - name: Zip linux-x64
        run: (cd ${{env.appName}}/bin/Release/netcoreapp3.1/linux-x64/publish ; zip -r ${{env.appName}}_linux-x64 *)
      # Create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASEVERSION }}
          release_name: ${{ env.RELEASEVERSION }}
          draft: false
          prerelease: false
      # Upload osx-x64
      - name: Upload osx-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.appName}}/bin/Release/netcoreapp3.1/osx-x64/publish/${{env.appName}}_osx-x64.zip
          asset_name: ${{env.appName}}_osx-x64.zip
          asset_content_type: application/zip
      # Upload win-x64
      - name: Upload win-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.appName}}/bin/Release/netcoreapp3.1/win-x64/publish/${{env.appName}}_win-x64.zip
          asset_name: ${{env.appName}}_win-x64.zip
          asset_content_type: application/zip
      # Upload linux-x64
      - name: Upload linux-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.appName}}/bin/Release/netcoreapp3.1/linux-x64/publish/${{env.appName}}_linux-x64.zip
          asset_name: ${{env.appName}}_linux-x64.zip
          asset_content_type: application/zip
